import math
def check_winner(board):
    for row in range(3):
        if board[row][0] == board[row][1] == board[row][2] != ' ':
            return board[row][0]
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] != ' ':
            return board[0][col]
    if board[0][0] == board[1][1] == board[2][2] != ' ':
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] != ' ':
        return board[0][2]
    return None
def minimax(board, is_maximizing):
    winner = check_winner(board)
    if winner == 'X': return 1
    if winner == 'O': return -1
    if all(board[row][col] != ' ' for row in range(3) for col in range(3)): return 0
    best = -math.inf if is_maximizing else math.inf
    for row in range(3):
        for col in range(3):
            if board[row][col] == ' ':
                board[row][col] = 'X' if is_maximizing else 'O'
                score = minimax(board, not is_maximizing)
                best = max(best, score) if is_maximizing else min(best, score)
                board[row][col] = ' '
    return best
def best_move(board):
    best_val = -math.inf
    move = (-1, -1)
    for row in range(3):
        for col in range(3):
            if board[row][col] == ' ':
                board[row][col] = 'X'
                move_val = minimax(board, False)
                board[row][col] = ' '
                if move_val > best_val:
                    move = (row, col)
                    best_val = move_val
    return move
board = [[' ' for _ in range(3)] for _ in range(3)]
while True:
    row, col = best_move(board)
    board[row][col] = 'X'
    if check_winner(board):
        print("Player X wins!")
        break
    print(board)
